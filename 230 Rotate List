/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head) return head;
        ListNode* fast = head;
        int count = 0;
        if(k==0)    return head;
        while(fast && k){
          fast = fast->next;
          count++;
          k--;
        }
        if(!fast && k==0) return head;
        if(k>0) {
          k %= count;
          if(k==0)  return head;
          fast = head;
          while(k--)  fast = fast->next;
        }
        ListNode* slow = head;
        ListNode* prefast = fast;
        ListNode* preslow = slow;
        while(fast){
          preslow = slow;
          slow = slow->next;
          prefast = fast;
          fast = fast->next;
        }
        ListNode* tmp = slow;
        preslow->next = NULL;
        prefast->next = head;
        return tmp;
    }
};
