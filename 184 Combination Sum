class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> result;
        vector<int> v;
        backtracking(candidates,v,result,target,0);
        return result;
    }
    void backtracking(vector<int>& nums, vector<int>& v, vector<vector<int>>& r, int target,int start){
      if(target == 0){  r.push_back(v); return;}
      if(target<0)  return;
      for(int i=start;i<nums.size();i++){
        v.push_back(nums[i]);
        backtracking(nums,v,r,target-nums[i],i);
        v.pop_back();
      }
    }
};
