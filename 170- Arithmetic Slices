class Solution {
private:
  int count = 0;
public:
    int numberOfArithmeticSlices(vector<int>& A) {
      for(int i=0;i<A.size();i++){
        countArithmetic1(A,i,i);
        countArithmetic2(A,i,i+1);
      }
      return count;
    }
    void countArithmetic1(vector<int>& a, int left,int right){
      if(left==0 || right == a.size()-1)    return;
      int middle2 = a[left]+a[right];
      left--;right++;
      while(a[left]+a[right]==middle2 && left>=0 && right<a.size()){
        count++;left--;right++;
      }
    }
      void countArithmetic2(vector<int>& a, int left,int right){
      if(left==0 || right == a.size()-1)    return;
      int diff = a[right] - a[left];
      int lastleft = a[left];
      int lastright = a[right];
      left--;right++;
      while(lastleft-a[left]==a[right]-lastright==diff && left>=0 && right<a.size()){
        count++;
        lastleft = a[left];
        lastright = a[right];
        left--;right++;
      }
    }
};
//!! wrong answer

class Solution {
public:
    int numberOfArithmeticSlices(vector<int>& A) {
        if(A.size()<3)  return 0;
        int dp = 0;
        int sum = 0;
        for(int i=2;i<A.size();i++){
          if(A[i]-A[i-1]==A[i-1]-A[i-2]){
            dp += dp;
          }
          else
            dp = 0;
          sum += dp;
        }
        return sum;
    }
};
