//slow Solution
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
      int remain;
      vector<int> result;
        for(int i = 0;i<numbers.size();i++){
          if(numbers[i]>target)
            break;

          remain = target - numbers[i];
          for(int j = 0;j<numbers.size();j++){
            if(numbers[j]==remain&&i!=j){
              result.push_back(i+1);
              result.push_back(j+1);
              return result;
            }
            if(numbers[j]>remain)
              break;
          }
        }
    }
};
//fast solution
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
      vector<int> indexes;
      int low = 0,high = numbers.size()-1;
      while(low<high){
        int result = numbers[low]+numbers[high];
        if(result==target){
          indexes.push_back(low+1);
          indexes.push_back(high+1);
          return indexes;
        }
        else if(result<target)
          low++;
        else
          high--;
      }
    }
};
