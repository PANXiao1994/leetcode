/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
      return addTwoNumbersHelper(l1,l2,0);
    }
    ListNode* addTwoNumbersHelper(ListNode* l1, ListNode* l2, int carry){
      if(!l1 && !l2){
        if(!carry)  return NULL;
        return new ListNode(1);
      }
      int digit;
      ListNode* head = new ListNode(0);
      if(!l1){
        digit = l2->val+carry;
        carry = (digit>=10)? 1:0;
        digit %= 10;
        head->val = digit;
        head->next = addTwoNumbersHelper(l1,l2->next,carry);
      }
      else if(!l2){
        digit = l1->val+carry;
        carry = (digit>=10)? 1:0;
        digit %= 10;
        head->val = digit;
        head->next = addTwoNumbersHelper(l1->next,l2,carry);
      }
      else{
        digit = l1->val+l2->val+carry;
        carry = (digit>=10)? 1:0;
        digit %= 10;
        head->val = digit;
        head->next = addTwoNumbersHelper(l1->next,l2->next,carry);
      }
      return head;
    }
};
