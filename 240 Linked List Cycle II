/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
     if(!head|| !head->next)  return NULL;
     ListNode *fast = head;
     ListNode *slow = head;
     while(1){
       fast = fast->next->next;
       slow = slow->next;
       if(fast==slow){
         ListNode* slow1 = head;
         while(slow!=slow1){
           slow1 = slow1->next;
           slow = slow->next;
         }
         return slow;
       }
       if(fast==NULL || fast->next == NULL)
         return NULL;
     }
    }
};
